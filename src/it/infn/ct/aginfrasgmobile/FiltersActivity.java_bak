package it.infn.ct.earthserverSGmobile;

import it.infn.ct.earthserverSGmobile.pojos.Filter;

import java.util.ArrayList;
import java.util.HashMap;

import android.app.ActionBar;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.ListView;
import android.widget.Spinner;
import android.widget.TextView;

public class FiltersActivity extends Activity implements
		DialogInterface.OnClickListener {

	// private MenuItem mSpinnerItem;

	private static final String TAG = FiltersActivity.class.getSimpleName();
	private ArrayList<Filter> filters = new ArrayList<Filter>();
	private HashMap<String, ArrayList<String>> chosenFilters = new HashMap<String, ArrayList<String>>();
	private String[] dataIndex;
	private ArrayAdapter<String> adapter;
	private FilterAdapter filterAdapter;
	private Filter tmpFilter;
	
	/** Items entered by the user is stored in this ArrayList variable */
	ArrayList<String> list = new ArrayList<String>();
	ListView lv;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_filters);
		ActionBar actionBar = getActionBar();
		actionBar.setDisplayHomeAsUpEnabled(true);
		Intent intent = getIntent();
		// filters = (ArrayList<Filter>) intent.getSerializableExtra("filters");
		filters = intent.getParcelableArrayListExtra("filters");
		dataIndex = new String[filters.size()];
		for (int i = 0; i < filters.size(); i++) {
			dataIndex[i] = filters.get(i).getDataindex();
		}
		lv = (ListView) findViewById(R.id.listView1);
//		adapter = new ArrayAdapter<String>(this,
//				android.R.layout.simple_list_item_1, list);
		filterAdapter = new FilterAdapter(this, R.layout.filter_row);
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.filters, menu);

		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {

		case android.R.id.home:
			super.onBackPressed();
			break;

		case R.id.action_settings:

			break;
		// case android.R.id.home:
		// getActionBar().setDisplayHomeAsUpEnabled(false);
		// super.onBackPressed();
		// break;
		case R.id.add_filter:
			tmpFilter = new Filter();
			createDialog("Select filter", dataIndex);
			//addFilter();
			break;

		}

		return true;
	}

	private void createDialog(String title, String[] data) {

		if (data != null) {
			AlertDialog.Builder builder = new AlertDialog.Builder(this);
			builder.setTitle(title);
			builder.setSingleChoiceItems(data, -1, this);
			builder.setPositiveButton("OK", this);
			builder.setNegativeButton("Cancel", this);
			builder.show();
		}
	}

	@Override
	public void onClick(DialogInterface dialog, int which) {
		switch (which) {
		case DialogInterface.BUTTON_POSITIVE:
			if (findViewById(R.id.filters_empty).getVisibility() == View.VISIBLE)
				findViewById(R.id.filters_empty).setVisibility(View.INVISIBLE);

			int checkedItem =((AlertDialog) dialog).getListView()
					.getCheckedItemPosition();
			
			filterAdapter.setData(filters.get(checkedItem));
			filterAdapter.notifyDataSetChanged();
			
			if (!chosenFilters.containsKey(filters.get(checkedItem).getDataindex()))
				chosenFilters.put(filters.get(checkedItem).getDataindex(), new ArrayList<String>());
			
			tmpFilter = filters.get(checkedItem);
			break;
		case DialogInterface.BUTTON_NEGATIVE:
			break;

		default:

			break;
		}
		lv.setAdapter(filterAdapter);
	}

//
//	@Override
//	public void onItemSelected(AdapterView<?> parent, View view, int pos,
//			long id) {
//		Log.d(TAG, "Selected Value: " + tmpFilter.getFilterList()[pos]);
//	}
//
//	@Override
//	public void onNothingSelected(AdapterView<?> parent) {
//		// TODO Auto-generated method stub
//		
//	}
	
	private class FilterAdapter extends ArrayAdapter<Filter> implements OnItemSelectedListener {

		Context context;

		public FilterAdapter(Context context, int textViewResourceId) {
			super(context, textViewResourceId);

			this.context = context;
		}

		public void setData(Filter f) {
//			clear();
			if (f != null) {
//				for (Filter p : data) {
					add(f);
				}
//			}
		}

		/* private view holder class */
		private class ViewHolder {
			TextView filterName;
			Spinner filterValues;
		}

		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolder holder = null;
			Filter f = getItem(position);

			LayoutInflater mInflater = (LayoutInflater) context
					.getSystemService(Activity.LAYOUT_INFLATER_SERVICE);
			// if (convertView == null) {
			convertView = mInflater.inflate(R.layout.filter_row, null);
			holder = new ViewHolder();
			holder.filterName = (TextView) convertView
					.findViewById(R.id.filterName);
			holder.filterValues = (Spinner) convertView
					.findViewById(R.id.filterValues);
			holder.filterValues.setOnItemSelectedListener(this);

			convertView.setTag(holder);
			// } else
			// holder = (ViewHolder) convertView.getTag();

			holder.filterName.setText(f.getDataindex());
			ArrayAdapter<String> adapter = new ArrayAdapter<String>(getBaseContext(), android.R.layout.simple_spinner_item, f.getFilterList());
		    adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
			
			
			holder.filterValues.setAdapter(adapter);
			return convertView;
		}

		@Override
		public void onItemSelected(AdapterView<?> parent, View view, int pos,
				long id) {
			if(tmpFilter!=null){
				for (int i=0; i< tmpFilter.getFilterList().length; i++) {
					Log.d(TAG, "Filter List["+i+"]" + tmpFilter.getFilterList()[i]);
				}
				Log.d(TAG, "Selected Value: " + tmpFilter.getFilterList()[pos]);
			}
		}

		@Override
		public void onNothingSelected(AdapterView<?> parent) {
			// TODO Auto-generated method stub
			
		}

	}

}
